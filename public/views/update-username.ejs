<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Actualizar nombre de usuario</title>
    <link rel="stylesheet" href="../css/estilos.css">
</head>
<body class="usuario">

    <!-- Encabezado con barra de búsqueda -->
    <header>
        <div class="header-container">
            <a class="logo" href="dashboard">
                <img src="../css/logo.png" alt="Logo">
            </a>

            <!-- Barra de búsqueda con ícono de lupa -->
            <form action="/users/buscar" id="searchForm" class="search-bar" method="get">
                <i class="icono-lupa fas fa-search"></i>
                <input id="searchUsername" name="searchUsername" placeholder="Buscar Usuario..." required />
                <input type="submit" value="Buscar" />
            </form>
        </div>
    </header>

    <!-- Formulario para cambiar nombre de usuario -->
    <form id="usernameForm" class="formulario" action="/users/username-update" method="post">
        <input type="text" class="nuevoNombreUsuario" name="newUsername" placeholder="Introduce tu nombre de usuario" required />
        <input type="submit" value="Cambiar" class="boton">
    </form>

    <script>
        document.getElementById("usernameForm").addEventListener("submit", function(event) {
            event.preventDefault(); // Prevenir el envío tradicional del formulario

            const newUsername = document.querySelector(".nuevoNombreUsuario").value; // Obtener el nuevo nombre de usuario

            // Realizar la solicitud fetch con el método PATCH
            fetch("/users/username-update", {
                method: "PATCH",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ newUsername: newUsername })
            })
            .then(response => response.json()) // Parsear la respuesta JSON
            .then(data => {
                if (data.success) {
                    // Si la respuesta es exitosa, mostrar mensaje de éxito
                    alert("Nombre de usuario actualizado exitosamente.");
                } else {
                    // Manejar diferentes tipos de error con alertas personalizadas
                    switch (data.type) {
                        case "validation_error":
                            alert(`Error: ${data.message}`);
                            break;
                        case "username_taken":
                            alert(`Error: ${data.message}`);
                            break;
                        case "user_not_found":
                            alert(`Error: ${data.message}`);
                            break;
                        case "server_error":
                            alert(`Error inesperado: ${data.message}`);
                            break;
                        default:
                            alert("Ha ocurrido un error desconocido.");
                    }
                }
            })
            .catch(error => {
                console.log("Ha habido un error, vuélvelo a intentar.");
                console.error(error);
            });
        });
    </script>
</body>
</html>

